@startuml
scale 350 width
[*] --> TaskPointer0: TASK_PTR = 0
[*] --> TaskPointer1: TASK_PTR = 1
[*] --> TaskPointer2: TASK_PTR = 2
[*] --> TaskPointer3: TASK_PTR = 3
[*] --> TaskPointer4: TASK_PTR = 4
[*] --> TaskPointer5: TASK_PTR = 5
[*] --> TaskPointer6: TASK_PTR = 6
[*] --> TaskPointer7: TASK_PTR = 7
[*] --> TaskPointer99: TASK_PTR = 99

TaskPointer0: Message initialize phase

state TaskPointer1 {

TaskPointer0 --> AcquireEquipment

AcquireEquipment --> SetOAR: Acquire Failed
AcquireEquipment: All of valves and agitator CM
SetOAR --> AcquireEquipment
AcquireEquipment --> HOLD_REQ: Device Acquired  \n & pending confirm = 0

}

state TaskPointer2 {
AcquireEquipment --> SetMonitors: Device Acquired \n & pending confirm = 1
HOLD_REQ --> SetMonitors

}

state TaskPointer3 {
SetMonitors --> WT_TARE
WT_TARE: Reset the Zero & Tare \n Reactor Scales Weights

}

state TaskPointer4 {
WT_TARE --> PRESSURE_AUTO1
PRESSURE_AUTO1: close vent valve, \nN2 setpoint = Init_Press

}

state TaskPointer5 {

PRESSURE_AUTO1 --> OAR_WTR_QTY: RX_PRESS > init Press - 0.2 \n (pressure drops 0.2 psig \n from initial)
OAR_WTR_QTY --> WTR_CHG_EM
WTR_CHG_EM: CHARGE
WTR_CHG_EM --> Monitor
Monitor: null

Monitor -left-> StopCharge: reactor pressure \n < Stop_Press
Monitor --> PRESSURE_AUTO2: reactor pressure \n > End_Press

PRESSURE_AUTO2: Open vent valve (SP = Vent_Press), \n Open N2 valve (SP = PAD_Press)

StopCharge: WTR_CHG_EM: CLOSE ALL

StopCharge --> ResumeCharge: reactor pressure \n > Resume_Press
ResumeCharge: WTR_CHG_EM: CHAGRE

ResumeCharge --> Monitor
}

state TaskPointer6 {
PRESSURE_AUTO2 --> PRESSURE_AUTO3: H2O in reactor > target
PRESSURE_AUTO3: vent vlv sp = R_VENT_SP (4 psig) \n N2 vlv sp = R_PRESS_SP (2 psig)

PRESSURE_AUTO3 --> PROMPTOK
PROMPTOK: Cleanout is complete

}

state TaskPointer7 {

PROMPTOK --> DisableMonitors

}

DisableMonitors --> TaskPointer99
TaskPointer99: Final step, release equipment, \n upload reports

TaskPointer99 --> [*]

@enduml